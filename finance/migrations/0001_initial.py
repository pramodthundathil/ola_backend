# Generated by Django 5.2.4 on 2025-10-20 04:52

import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('customer', '0002_remove_paymentrecord_credit_application_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FinancePlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apc_score', models.IntegerField(help_text='APC score from credit bureau')),
                ('risk_tier', models.CharField(choices=[('TIER_A', 'Tier A - Low Risk (APC ≥ 600)'), ('TIER_B', 'Tier B - Medium Risk (APC 550-599)'), ('TIER_C', 'Tier C - High Risk (APC 500-549)'), ('TIER_D', 'Tier D - Very High Risk (APC < 500)')], max_length=10)),
                ('device_price', models.DecimalField(decimal_places=2, help_text='Total device price including 7% ITBMS tax', max_digits=10)),
                ('is_high_end_device', models.BooleanField(default=False, help_text='Device price > $300')),
                ('minimum_down_payment_percentage', models.DecimalField(decimal_places=2, help_text='Minimum % required based on risk tier', max_digits=5)),
                ('actual_down_payment', models.DecimalField(decimal_places=2, help_text='Actual down payment amount', max_digits=10)),
                ('down_payment_percentage', models.DecimalField(decimal_places=2, help_text='Actual down payment %', max_digits=5)),
                ('amount_to_finance', models.DecimalField(decimal_places=2, help_text='Device price - down payment', max_digits=10)),
                ('allowed_terms', models.JSONField(default=list, help_text='List of allowed terms based on risk tier')),
                ('selected_term', models.IntegerField(choices=[(4, '4 Months'), (6, '6 Months'), (8, '8 Months')], help_text='Selected term in months')),
                ('monthly_installment', models.DecimalField(decimal_places=2, help_text='Monthly EMI amount (rounded, no cents)', max_digits=10)),
                ('total_amount_payable', models.DecimalField(decimal_places=2, help_text='Total amount = down payment + (EMI × term)', max_digits=10)),
                ('customer_monthly_income', models.DecimalField(decimal_places=2, help_text='Validated or declared monthly income', max_digits=10)),
                ('payment_capacity_factor', models.DecimalField(decimal_places=2, help_text='k factor based on risk tier (0.10-0.30)', max_digits=4)),
                ('maximum_allowed_installment', models.DecimalField(decimal_places=2, help_text='k × monthly_income', max_digits=10)),
                ('installment_to_income_ratio', models.DecimalField(decimal_places=2, help_text='Actual EMI / monthly_income', max_digits=5)),
                ('payment_capacity_passed', models.BooleanField(default=False)),
                ('conditions_met', models.BooleanField(default=False)),
                ('requires_adjustment', models.BooleanField(default=False)),
                ('adjustment_notes', models.TextField(blank=True, null=True)),
                ('final_score', models.IntegerField(blank=True, help_text='Weighted final score (0-100)', null=True)),
                ('score_status', models.CharField(blank=True, choices=[('APPROVED', 'Approved (≥80)'), ('CONDITIONAL', 'Approved with Conditions (60-79)'), ('REJECTED', 'Rejected (<60)')], max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('credit_application', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='finance_plan', to='customer.creditapplication')),
                ('credit_score', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='finance_plans', to='customer.creditscore')),
            ],
            options={
                'db_table': 'finance_plans',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EMISchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('installment_number', models.IntegerField(help_text='Installment sequence number (1, 2, 3...)')),
                ('due_date', models.DateField(help_text='Payment due date')),
                ('installment_amount', models.DecimalField(decimal_places=2, help_text='EMI amount for this installment', max_digits=10)),
                ('amount_paid', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Amount paid towards this installment', max_digits=10)),
                ('balance_remaining', models.DecimalField(decimal_places=2, help_text='Remaining balance for this installment', max_digits=10)),
                ('status', models.CharField(choices=[('UPCOMING', 'Upcoming'), ('DUE', 'Due'), ('PAID', 'Paid'), ('OVERDUE', 'Overdue'), ('PARTIALLY_PAID', 'Partially Paid')], default='UPCOMING', max_length=20)),
                ('paid_date', models.DateField(blank=True, null=True)),
                ('days_overdue', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('finance_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emi_schedule', to='finance.financeplan')),
            ],
            options={
                'db_table': 'emi_schedules',
                'ordering': ['finance_plan', 'installment_number'],
            },
        ),
        migrations.CreateModel(
            name='PaymentRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_type', models.CharField(choices=[('DOWN_PAYMENT', 'Down Payment'), ('EMI', 'EMI Payment'), ('LATE_FEE', 'Late Fee'), ('FULL_SETTLEMENT', 'Full Settlement')], max_length=20)),
                ('payment_method', models.CharField(choices=[('PUNTO_PAGO', 'Punto Pago'), ('YAPPY', 'Yappy'), ('WESTERN_UNION', 'Western Union'), ('CASH', 'Cash'), ('BANK_TRANSFER', 'Bank Transfer'), ('OTHER', 'Other')], max_length=20)),
                ('payment_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_date', models.DateTimeField()),
                ('payment_status', models.CharField(choices=[('PENDING', 'Pending'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('REFUNDED', 'Refunded'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=20)),
                ('transaction_reference', models.CharField(blank=True, help_text='External payment reference number', max_length=100, null=True)),
                ('receipt_number', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, help_text='Additional payment metadata', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('emi_schedule', models.ForeignKey(blank=True, help_text='Link to specific EMI installment', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments', to='finance.emischedule')),
                ('finance_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='finance.financeplan')),
                ('processed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_payments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'payment_records',
                'ordering': ['-payment_date'],
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('CUSTOMER_CREATED', 'Customer Created'), ('CREDIT_SCORE_CHECKED', 'Credit Score Checked'), ('APC_CONSULTED', 'APC Consulted'), ('IDENTITY_VERIFIED', 'Identity Verified'), ('APPLICATION_CREATED', 'Application Created'), ('APPLICATION_APPROVED', 'Application Approved'), ('APPLICATION_REJECTED', 'Application Rejected'), ('DEVICE_ENROLLED', 'Device Enrolled'), ('PAYMENT_RECEIVED', 'Payment Received'), ('DEVICE_LOCKED', 'Device Locked'), ('DEVICE_UNLOCKED', 'Device Unlocked')], max_length=50)),
                ('description', models.TextField()),
                ('metadata', models.JSONField(blank=True, help_text='Additional data related to the action', null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('credit_application', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to='customer.creditapplication')),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to='customer.customer')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'audit_logs',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['customer', '-created_at'], name='audit_logs_custome_b3160f_idx'), models.Index(fields=['user', '-created_at'], name='audit_logs_user_id_6193b2_idx'), models.Index(fields=['action_type'], name='audit_logs_action__168beb_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='financeplan',
            index=models.Index(fields=['credit_application'], name='finance_pla_credit__35a14d_idx'),
        ),
        migrations.AddIndex(
            model_name='financeplan',
            index=models.Index(fields=['risk_tier'], name='finance_pla_risk_ti_704c86_idx'),
        ),
        migrations.AddIndex(
            model_name='financeplan',
            index=models.Index(fields=['apc_score'], name='finance_pla_apc_sco_6d80f6_idx'),
        ),
        migrations.AddIndex(
            model_name='emischedule',
            index=models.Index(fields=['finance_plan', 'installment_number'], name='emi_schedul_finance_f32709_idx'),
        ),
        migrations.AddIndex(
            model_name='emischedule',
            index=models.Index(fields=['due_date'], name='emi_schedul_due_dat_51272a_idx'),
        ),
        migrations.AddIndex(
            model_name='emischedule',
            index=models.Index(fields=['status'], name='emi_schedul_status_01d33a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='emischedule',
            unique_together={('finance_plan', 'installment_number')},
        ),
        migrations.AddIndex(
            model_name='paymentrecord',
            index=models.Index(fields=['finance_plan', '-payment_date'], name='payment_rec_finance_334ac8_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentrecord',
            index=models.Index(fields=['emi_schedule'], name='payment_rec_emi_sch_25f78c_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentrecord',
            index=models.Index(fields=['payment_status'], name='payment_rec_payment_152c45_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentrecord',
            index=models.Index(fields=['payment_date'], name='payment_rec_payment_5f9f20_idx'),
        ),
    ]
