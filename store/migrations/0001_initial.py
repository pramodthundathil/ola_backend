# Generated by Django 5.1.4 on 2025-10-16 11:37

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'District',
                'verbose_name_plural': 'Districts',
                'db_table': 'districts',
                'ordering': ['province', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Province',
                'verbose_name_plural': 'Provinces',
                'db_table': 'provinces',
                'ordering': ['region', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Region',
                'verbose_name_plural': 'Regions',
                'db_table': 'regions',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Corregimiento',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='corregimientos', to='store.district')),
            ],
            options={
                'verbose_name': 'Corregimiento',
                'verbose_name_plural': 'Corregimientos',
                'db_table': 'corregimientos',
                'ordering': ['district', 'name'],
                'unique_together': {('district', 'name')},
            },
        ),
        migrations.AddField(
            model_name='district',
            name='province',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='districts', to='store.province'),
        ),
        migrations.AddField(
            model_name='province',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='provinces', to='store.region'),
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, verbose_name='Store Name')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='Store Code')),
                ('phone', models.CharField(blank=True, max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Phone Number')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('channel', models.CharField(choices=[('retail', 'Retail'), ('wholesale', 'Wholesale'), ('franchise', 'Franchise'), ('corporate', 'Corporate'), ('online', 'Online')], default='retail', max_length=20, verbose_name='Sales Channel')),
                ('ruc', models.CharField(help_text='Registro Ãšnico de Contribuyente', max_length=50, unique=True, verbose_name='RUC (Tax ID)')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Latitude')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Longitude')),
                ('image', models.ImageField(blank=True, null=True, upload_to='store_images/', verbose_name='Store Image')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Full Address')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active Status')),
                ('opening_date', models.DateField(blank=True, null=True, verbose_name='Opening Date')),
                ('monthly_target', models.DecimalField(decimal_places=2, default=0.0, max_digits=12, verbose_name='Monthly Sales Target')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('corregimiento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='stores', to='store.corregimiento', verbose_name='Corregimiento')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_stores', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='stores', to='store.district', verbose_name='District')),
                ('province', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='stores', to='store.province', verbose_name='Province')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='stores', to='store.region', verbose_name='Region')),
                ('sales_advisor', models.ForeignKey(blank=True, limit_choices_to={'role': 'sales_advisor'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='advised_stores', to=settings.AUTH_USER_MODEL, verbose_name='Sales Advisor')),
                ('store_manager', models.OneToOneField(blank=True, limit_choices_to={'role': 'store_manager'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_store', to=settings.AUTH_USER_MODEL, verbose_name='Store Manager')),
            ],
            options={
                'verbose_name': 'Store',
                'verbose_name_plural': 'Stores',
                'db_table': 'stores',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StorePerformance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('month', models.DateField(verbose_name='Month')),
                ('total_sales', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('total_applications', models.IntegerField(default=0)),
                ('approved_applications', models.IntegerField(default=0)),
                ('rejected_applications', models.IntegerField(default=0)),
                ('pending_applications', models.IntegerField(default=0)),
                ('total_revenue', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('total_commissions', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('collections', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('defaults', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('new_customers', models.IntegerField(default=0)),
                ('returning_customers', models.IntegerField(default=0)),
                ('target_achievement_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('approval_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performances', to='store.store')),
            ],
            options={
                'verbose_name': 'Store Performance',
                'verbose_name_plural': 'Store Performances',
                'db_table': 'store_performances',
                'ordering': ['-month'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='district',
            unique_together={('province', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='province',
            unique_together={('region', 'name')},
        ),
        migrations.AddIndex(
            model_name='store',
            index=models.Index(fields=['code'], name='stores_code_3647f4_idx'),
        ),
        migrations.AddIndex(
            model_name='store',
            index=models.Index(fields=['region', 'province'], name='stores_region__a571e1_idx'),
        ),
        migrations.AddIndex(
            model_name='store',
            index=models.Index(fields=['is_active'], name='stores_is_acti_89b637_idx'),
        ),
        migrations.AddIndex(
            model_name='store',
            index=models.Index(fields=['store_manager'], name='stores_store_m_e57413_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='storeperformance',
            unique_together={('store', 'month')},
        ),
    ]
