# Generated by Django 5.0.6 on 2025-10-14 07:47

import django.core.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(db_index=True, max_length=255, unique=True, verbose_name='email address')),
                ('username', models.CharField(blank=True, help_text='Optional username. Email will be used for login if not provided.', max_length=150, null=True, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=150)),
                ('last_name', models.CharField(blank=True, max_length=150)),
                ('phone', models.CharField(blank=True, help_text='Contact phone number', max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('phone_number', models.CharField(blank=True, help_text='Contact phone number (alternative field)', max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/')),
                ('role', models.CharField(choices=[('salesperson', 'Salesperson'), ('store_manager', 'Store Manager'), ('global_manager', 'Global Manager'), ('financial_manager', 'Financial Manager'), ('sales_advisor', 'Sales Advisor'), ('admin', 'Administrator')], default='salesperson', help_text='User role in the system', max_length=20)),
                ('store_id', models.CharField(blank=True, help_text='Associated store ID for salespeople and managers', max_length=50, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active.')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into admin site.')),
                ('is_verified', models.BooleanField(default=False, help_text='Designates whether the user has verified their email.')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee_id', models.CharField(blank=True, help_text='Unique employee identification number', max_length=50, null=True, unique=True)),
                ('commission_rate', models.DecimalField(decimal_places=2, default=0.0, help_text='Commission rate for salespeople (percentage)', max_digits=5)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='customuser_set', related_query_name='customuser', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='customuser_set', related_query_name='customuser', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'custom_users',
                'ordering': ['-date_joined'],
                'indexes': [models.Index(fields=['email'], name='custom_user_email_c8f161_idx'), models.Index(fields=['role'], name='custom_user_role_1a5fd2_idx'), models.Index(fields=['store_id'], name='custom_user_store_i_cdf226_idx'), models.Index(fields=['is_active'], name='custom_user_is_acti_f5beb2_idx')],
            },
        ),
    ]
