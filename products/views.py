from django.shortcuts import render

# Third-party import
from rest_framework.decorators import api_view, permission_classes
from rest_framework.views import APIView
from rest_framework.response import Response
from rest_framework import status
from .models import ProductCategory
from .permissions import IsAdminOrGlobalManager
from .serializers import ProductCategorySerializer
from drf_yasg.utils import swagger_auto_schema
from drf_yasg import openapi

import logging
logger = logging.getLogger(__name__)

#======================Product Category Create=======================#

from rest_framework.views import APIView
from rest_framework.response import Response
from rest_framework import status
from drf_spectacular.utils import extend_schema, OpenApiResponse

@swagger_auto_schema(
    method='post',
    operation_summary="Create a new Product Category(Admin or Global Manager Only)",
    operation_description="Creates a new Product Category.Slug is autogenerated by the model. Returns the created Product Category.",
    request_body=ProductCategorySerializer,
    responses={
    201: openapi.Response(
        description="Product Category Created Successfully",
        examples={
            "application/json":{
                "id":45,
                "name":"Smart Watches",
                "slug":"smart-watches",
                "icon":"âŒš",
                "image":None,
                "description":"Wearable smart devices",
                "is_active":True,
                "is_featured":True,
                "display_order":2,
                "meta_title":None,
                "meta_description":None,
                "created_at":"2025-10-15T12:00:00Z",
                "updated_at":"2025-10-15T12:00:00Z"
            }
        }
    ),
    400:"Invalid Category or Category Already Exists.",
    403:"Admin or Global Manager Access Required"
    },
    tags=['Product Catalog']
)
class ProductCategoryCreateView(APIView):
    """
    Create a new product category (Admin or Global Manager only).
    Slug is automatically generated by the model.
    """
    permission_classes = [IsAdminOrGlobalManager]

    def post(self, request):
        try:
            serializer = ProductCategorySerializer(data=request.data)
            if serializer.is_valid():
                serializer.save()
                logger.info(f"Category '{serializer.validated_data.get('name')}' created successfully.")
                return Response(serializer.data, status=status.HTTP_201_CREATED)

            logger.warning(f"Category creation failed: {serializer.errors}")
            return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)

        except Exception as e:
            logger.exception("Unexpected error occurred while creating category.")
            return Response(
                {"detail": "An unexpected error occurred while creating the category."},
                status=status.HTTP_500_INTERNAL_SERVER_ERROR
            )


